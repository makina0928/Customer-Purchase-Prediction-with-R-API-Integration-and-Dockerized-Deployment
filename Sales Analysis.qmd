---
title: "DATA ANALYSIS WITH R"
subtitle: "(A Step-by-step Statistical Approach)" 
format: html
code-fold: true
code-tools: true
execute: 
  cache: true
  warning: false
  message: false 
---

# Introduction

This project outlines the steps for analyzing data on sales, profit and tax It includes recommended statistical analyses for both numerical and categorical variables.

By employing suitable statistical analyses, we gave valuable insights into the relationships between sales, profit and tax This information can be used to optimize ***pricing strategies***, ***improve sales performance*** and ***make informed business decisions***.

# Considerations

-   Choose the statistical analysis appropriate for the data type (numerical vs. categorical).
-   Consider normality assumptions for specific tests and address them through transformation if necessary.
-   Utilize visualization techniques throughout the analysis to effectively communicate insights.

# 1. Data Preparation

## - Cleaning:

Ensure data accuracy by checking for missing values, outliers and inconsistencies.

-   **Data types**

This project outlines the steps for analyzing data on sales, profit and tax It includes 
recommended statistical analyses for both numerical and categorical variables.

By employing suitable statistical analyses, we gave valuable insights into the relationships between sales, profit and tax This information can be used to optimize **_pricing strategies_**, **_improve sales performance_** and **_make informed business decisions_**. 

# Considerations
  * Choose the statistical analysis appropriate for the data type (numerical vs. categorical). 
  * Consider normality assumptions for specific tests and address them through 
transformation if necessary. 
  * Utilize visualization techniques throughout the analysis to effectively communicate 
insights. 

# 1. Data Preparation 

## - Cleaning:
Ensure data accuracy by checking for missing values, outliers and inconsistencies.

* **Data types**
```{r, warning=FALSE}
library(dplyr)
library(gt)
library(readr)

# Load the file using readr
df <- read_csv("C:/Data/Projects/R-DataScience/Sales Analysis/Amazon Sales FY2020-21.csv")

# View the data types 
glimpse(df)

```

- **Data types conversion**

* **Data types conversion** 


```{r}

library(lubridate)

df2 <- df
 df2$order_date = dmy(df2$order_date)
 
class(df2$order_date)

```

-   **Missing Values**

```{r}

# Check the total number of null values in each column
sapply(df2, function(x) sum(is.na(x)))

```

## - Derive New Variables:

Calculate metrics such as profit margin (profit / sales) and period features. 
* **Merge Columns**

```{r}
library(dplyr)

df2$Name <- paste(df2$`First Name`, df2$`Last Name`, sep = " ")

```

* **Add period features (year, Quarter, month, week and days)**

```{r}

df2 <- df2 |> 
  mutate(
    Month = month(order_date),
    MonthName = month(order_date, label = TRUE, abbr = FALSE),
    MonthNumber = month(order_date),
    Day = day(order_date),
    Week = week(order_date),
    isoWeek = isoweek(order_date),
    DayOfMonth = mday(order_date),
    DayOfWeek = wday(order_date),
    DayName = wday(order_date, label = TRUE, abbr = FALSE),
    DayOfYr = yday(order_date),
    quarter = quarter(order_date),
    year = year(order_date)
  )

# Glimpse only the new columns
glimpse(select(df2, MonthName,MonthNumber, Day, Week, isoWeek, DayOfMonth, DayOfWeek, DayName, DayOfYr, quarter, year))

```

-   **Let us subset the data frame**
```{r}
library(gt)
Data <-
select(df2,
 order_id, order_date, status, item_id, sku, qty_ordered, price, value, discount_amount, total, category, payment_method, cust_id, Gender, age, full_name,`Place Name`, County, City, State, Region, Discount_Percent, MonthName,MonthNumber, Day, Week, isoWeek, DayOfMonth, DayOfWeek, DayName, DayOfYr, quarter, year)

gt(head(Data))
```

# 2. Exploratory Data Analysis (EDA)
```{r}
library(skimr)

skim(Data)
```

# 3. Data Visualization

-   **Objective:** Visualizing the distribution of a single variable, as well as relationships between two or more variables in the sales data frame.

-   **Tools:** Using ggplot2 which is a dplyr tool for visual aids.

## 3.1 One Quantitative Variable
```{r}
library(dplyr)

Numeric_Columns <- Data |>
  select(qty_ordered, price,value, discount_amount, total)

```


```{r, warning=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(gridExtra)

# Calculate the 2.5th and 97.5th percentiles
lower_bound <- quantile(Numeric_Columns$total, 0.01)
upper_bound <- quantile(Numeric_Columns$total, 0.975)

# Create the histogram plot
histogram_plot1 <- ggplot(Numeric_Columns, aes(x = total)) +
  geom_histogram(bins = 30, fill = "lightblue", alpha = 0.5, color = "black", size = 0.1) +
  scale_x_continuous(limits = c(lower_bound, upper_bound)) +
  theme(legend.position = "none")

# Create the histogram plot
histogram_plot2 <- ggplot(Numeric_Columns, aes(x = price)) +
  geom_histogram(bins = 30, fill = "lightblue", alpha = 0.5, color = "black", size = 0.1) +
  scale_x_continuous(limits = c(lower_bound, upper_bound)) +
  theme(legend.position = "none")

# Create the histogram plot
histogram_plot3 <- ggplot(Numeric_Columns, aes(x = value)) +
  geom_histogram(bins = 30, fill = "lightblue", alpha = 0.5, color = "black", size = 0.1) +
  scale_x_continuous(limits = c(lower_bound, upper_bound)) +
  theme(legend.position = "none")

# Create the histogram plot
histogram_plot4 <- ggplot(Numeric_Columns, aes(x = discount_amount)) +
  geom_histogram(bins = 30, fill = "lightblue", alpha = 0.5, color = "black", size = 0.1) +
  scale_x_continuous(limits = c(lower_bound, upper_bound)) +
  theme(legend.position = "none")

# Arrange the plots in a grid layout
grid.arrange(histogram_plot1, histogram_plot2,histogram_plot3,histogram_plot4, ncol = 2)

```

## 3.2 Visualizing Outliers (box plots)

## 3.3 Visualizing Relationships (Two Numerical Variables)

In the following sections, we shall focus on **Total Sales**.

## 2.3 Visualizing Relationships (Numerical vs. Categorical)

# 3. Data Transformation

-   **Objective**

-   **Tools** Using dplyr tools to transform rows (filter() and arrange()), columns (select() and mutate()) and manipulate groups (group_by() and summarize())

# 4. Data Tidying

-   **Objective**

-   **Tools** Using dplyr tool tidyr by utilizing pivot_longer() and pivot_wider()

# 5. Exploratory Data Analysis (EDA)

-   **Objective**

-   **Tools** Using dplyr tools

# 6. Statistical analysis and inferantial statistics

## 6.1 Univariate Analysis (Understanding Individual Variables)

-   **Objective**

-   **Tools** Using dplyr tools to transform rows (filter() and arrange()), columns (select() and mutate()) and manipulate groups (group_by() and summarize())

### 6.1.1 Descriptive Statistics (numerical variables)

### 6.1.2 Frequency Tables (categorical variables)

## 6.2 Bivariate Analysis (Exploring Relationships Between Two Variables)

-   **Objective**

-   **Tools** Using dplyr tools to transform rows (filter() and arrange()), columns (select() and mutate()) and manipulate groups (group_by() and summarize())

### 6.2.1 Correlation Analysis (Numerical vs. Numerical)

### 6.2.2 Analysis of Variance (Numerical vs. Categorical)

### 6.2.3 Chi-Square Test (Categorical vs. Categorical)

## 6.3 Multivariate Analysis (Exploring Relationships Between Multiple Variables)

-   **Objective**

-   **Tools** Using dplyr tools to transform rows (filter() and arrange()), columns (select() and mutate()) and manipulate groups (group_by() and summarize())

### 6.3.1 Multiple Regression

### 6.3.2 Logistic Regression

### 6.3.3 Factor Analysis

### 6.3.4 Cluster Analysis

## 7. Survival Analysis (Next Project)

Model the time it takes for an event to occur ( time to customer churn).

# 2. Univariate Analysis (Understanding Individual Variables)

## - Numerical Variables:

-   **Descriptive Statistics:** Calculate measures of central tendency and dispersion to understand the data distribution.

-   **Visualization:** Create histograms, box plots and density plots to visualize data distribution and identify potential outliers or skewness.

-   **Bar Charts & Pie Charts:** Visualize the proportion of data points within each category.

# 3. Bivariate Analysis (Exploring Relationships Between Two Variables)

## - Numerical vs. Numerical:

-   **Scatter Plots:** Visualize the relationship between two numerical variables (e.g., discount vs. sales).
-   **Correlation Analysis:** Calculate Pearson's correlation coefficient to measure the strength and direction of the linear relationship.

## - Numerical vs. Categorical:

-   **Box Plots:** Compare the distribution of a numerical variable across different categories of a categorical variable (e.g., average profit for different product categories).
-   **ANOVA (Analysis of Variance):** Test if the means of a numerical variable differ significantly across categories of a categorical variable.

## - Categorical vs. Categorical:

-   **Chi-Square Test:** Assess the association between two categorical variables (e.g., is there a relationship between discount offered and customer location?).

# 4. Multivariate Analysis (Exploring Relationships Between Multiple Variables)

-   **Multiple Regression:** Analyze how multiple independent variables (e.g., discount, product type) influence a dependent variable (e.g., sales).
-   **Logistic Regression:** Model the probability of a categorical outcome (e.g., purchase or no purchase) based on multiple independent variables.
-   **Factor Analysis:** Identify underlying factors that explain the variance in a set of interrelated variables.
-   **Cluster Analysis:** Group similar data points (e.g., customers with similar buying behavior) based on multiple variables.
-   **Time Series Analysis:** Analyze sales or profit data over time to identify trends and seasonality.

# 2. Univariate Analysis (Understanding Individual Variables) 

## - Numerical Variables:
  * **Descriptive Statistics:**
Calculate measures of central tendency and dispersion to understand the data distribution.

  * **Visualization:**
Create histograms, box plots and density plots to visualize data 
distribution and identify potential outliers or skewness. 

  * **Bar Charts & Pie Charts:**
  Visualize the proportion of data points within each category. 
 
# 3. Bivariate Analysis (Exploring Relationships Between Two Variables) 

## - Numerical vs. Numerical: 
  * **Scatter Plots:**
Visualize the relationship between two numerical variables (e.g., 
discount vs. sales). 
  * **Correlation Analysis:**
Calculate Pearson's correlation coefficient to measure the 
strength and direction of the linear relationship. 

## - Numerical vs. Categorical: 
  * **Box Plots:**
Compare the distribution of a numerical variable across different categories of a categorical variable (e.g., average profit for different product 
categories). 
  * **ANOVA (Analysis of Variance):**
Test if the means of a numerical variable differ 
significantly across categories of a categorical variable. 

## - Categorical vs. Categorical: 
  * **Chi-Square Test:**
Assess the association between two categorical variables (e.g., 
is there a relationship between discount offered and customer location?). 

# 4. Multivariate Analysis (Exploring Relationships Between Multiple Variables) 
  * **Multiple Regression:**
Analyze how multiple independent variables (e.g., discount, 
product type) influence a dependent variable (e.g., sales). 
  * **Logistic Regression:**
Model the probability of a categorical outcome (e.g., purchase or 
no purchase) based on multiple independent variables.
  * **Factor Analysis:**
Identify underlying factors that explain the variance in a set of interrelated variables. 
  * **Cluster Analysis:**
Group similar data points (e.g., customers with similar buying behavior) based on multiple variables.
  * **Time Series Analysis:**
Analyze sales or profit data over time to identify trends and seasonality. 
